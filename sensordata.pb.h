/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.3 at Sun Aug 23 19:39:18 2015. */

#ifndef PB_SENSORDATA_PB_H_INCLUDED
#define PB_SENSORDATA_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
/* Struct definitions */
typedef struct _SensorData {
    int32_t SensorId;
    int32_t Command;
    pb_callback_t Key;
    pb_callback_t Value;
} SensorData;

/* Default values for struct fields */

/* Initializer values for message structs */
#define SensorData_init_default                  {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}
#define SensorData_init_zero                     {0, 0, {{NULL}, NULL}, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define SensorData_SensorId_tag                  1
#define SensorData_Command_tag                   2
#define SensorData_Key_tag                       3
#define SensorData_Value_tag                     4

/* Struct field encoding specification for nanopb */
extern const pb_field_t SensorData_fields[5];

/* Maximum encoded size of messages (where known) */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define SENSORDATA_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
